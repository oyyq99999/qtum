os: linux
dist: bionic
language: minimal
git:
  depth: 2
cache:
  ccache: true
  directories:
    - $TRAVIS_BUILD_DIR/src
stages:
  - test
env:
  global:
    - MAKEJOBS=-j2
    - RUN_UNIT_TESTS=true
    - RUN_FUNCTIONAL_TESTS=true
    - RUN_FUZZ_TESTS=false
    - DOCKER_NAME_TAG=ubuntu:18.04
    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
    - CCACHE_SIZE=100M
    - CCACHE_TEMPDIR=/tmp/.ccache-temp
    - CCACHE_COMPRESS=1
    - CCACHE_DIR=$HOME/.ccache
    - DOCKER_PACKAGES="software-properties-common build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache cmake"
before_install:
  - set -o errexit; source .travis/test_03_before_install.sh
install:
  - set -o errexit; source .travis/test_04_install.sh
before_script:
  - set -o errexit; source .travis/test_05_before_script.sh
script:
  - export CONTINUE=1
  - if [ $SECONDS - gt 800]; then export CONTINUE=0; fi # likely the depends build took very long
  - if [ $CONTINUE = "1" ]; then set -o errexit; source .travis/test_06_script_a.sh; else set +o errexit; echo "The depends took too long to prepare, exit to cache current state"; false; fi
  - if [ $SECONDS -gt 1800 ]; then export CONTINUE=0; fi
  - if [ $CONTINUE = "1" ]; then set -o errexit; source .travis/test_06_script_b.sh; else set +o errexit; echo "The build took too long, exit to cache current state"; false; fi
after_script:
  - echo $TRAVIS_COMMIT_RANGE
  - echo $TRAVIS_COMMIT_LOG
jobs:
  include:

    - stage: test
      name: 'x86_64 Linux  [GOAL: functinal test]  [xenial]  [no depends, only system libs, sanitizers: thread (TSan), no wallet]'
      env: >-
        HOST=""
        RUN_UNIT_TESTS=false
        RUN_FUZZ_TESTS=false
        PACKAGES="clang llvm libssl-dev libevent-dev bsdmainutils libboost-all-dev libgmp-dev"
        NO_DEPENDS=1
        GOAL=""
        QTUM_CONFIG="--enable-bitcore-rpc --with-gui=no CC=clang CXX=clang++"

    - stage: test
      name: 'macOS 10.10  [GOAL: build]'
      env: >-
        HOST="x86_64-apple-darwin14"
        RUN_UNIT_TESTS=false
        RUN_FUNCTIONAL_TESTS=false
        PACKAGES="clang llvm libssl-dev libevent-dev bsdmainutils libboost-all-dev libgmp-dev"
        NO_DEPENDS=1
        GOAL="install"
        QTUM_CONFIG="--with-gui=no CC=clang CXX=clang++"
